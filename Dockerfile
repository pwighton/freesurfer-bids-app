# Generated by Neurodocker and Reproenv.

FROM ubuntu:xenial
ENV FS_LICENSE="/opt/freesurfer-20210513-fs-infant-dev-merge/license.txt" \
    SUBJECTS_DIR="/ext/fs-subjects" \
    FS_INFANT_MODEL="/opt/fs-infant-model" \
    OS="Linux" \
    PATH="/opt/niftyreg-master/bin:/opt/freesurfer-pkg/mni/current/bin:/opt/freesurfer-20210513-fs-infant-dev-merge/bin:/opt/freesurfer-20210513-fs-infant-dev-merge/fsfast/bin:/opt/freesurfer-20210513-fs-infant-dev-merge/tktools:/opt/freesurfer-20210513-fs-infant-dev-merge/mni/bin:$PATH" \
    FREESURFER_HOME="/opt/freesurfer-20210513-fs-infant-dev-merge" \
    FREESURFER="/opt/freesurfer-20210513-fs-infant-dev-merge" \
    PERL5LIB="/opt/freesurfer-20210513-fs-infant-dev-merge/mni/share/perl5" \
    LOCAL_DIR="/opt/freesurfer-20210513-fs-infant-dev-merge/local" \
    FSFAST_HOME="/opt/freesurfer-20210513-fs-infant-dev-merge/fsfast" \
    FMRI_ANALYSIS_DIR="/opt/freesurfer-20210513-fs-infant-dev-merge/fsfast" \
    FSF_OUTPUT_FORMAT="nii.gz" \
    FUNCTIONALS_DIR="/opt/freesurfer-20210513-fs-infant-dev-merge/sessions" \
    PYTHONPATH="/opt/freesurfer-20210513-fs-infant-dev-merge/python/packages" \
    FS_OVERRIDE="0" \
    FIX_VERTEX_AREA="" \
    FS_DISABLE_LANG="1" \
    FS_TIME_ALLOW="0" \
    MINC_BIN_DIR="/opt/freesurfer-20210513-fs-infant-dev-merge/mni/bin" \
    MINC_LIB_DIR="/opt/freesurfer-20210513-fs-infant-dev-merge/mni/lib" \
    MNI_DIR="/opt/freesurfer-20210513-fs-infant-dev-merge/mni" \
    MNI_DATAPATH="/opt/freesurfer-20210513-fs-infant-dev-merge/mni/data" \
    MNI_PERL5LIB="/opt/freesurfer-20210513-fs-infant-dev-merge/mni/share/perl5" \
    CNYBCH_TEMPLATE_SUBJECTS_DIR="/opt/fs-infant-model/CNYBCH" \
    CNYBCH_SUBJECTS="Template1 Template2 Template3 Template4 Template5 Template6 Template7 Template8 Template9 Template10 Template11 Template12 Template13 Template14 Template15 Template16 Template17 Template18 Template19 Template20 Template21 Template22 Template23 Template24 Template25 Template26" \
    CNYBCH_AGES="9 7 6 5 18 12 0 0 3 8 10 10 18 4 2 14 3 16 0 12 0 15 5 17 16 0" \
    CNYBCH_GMWM_SUBJECTS="Template5 Template6 Template8 Template10 Template13 Template18 Template20 Template22" \
    CNYBCH_GMWM_AGES="18 12 0 8 18 16 12 15" \
    CNYBCH_NEONATES="Template7 Template8 Template19 Template21 Template26" \
    CNYBCH_NEONATEAGES="3 4 1 2 4" \
    CNYBCH_AROUNDONE="Template11 Template12 Template6 Template20 Template16" \
    CNYBCH_AROUNDONEAGES="10 10 12 12 14"
RUN apt-get update -qq \
    && apt-get install -y -q --no-install-recommends \
           bc \
           binutils \
           bzip2 \
           ca-certificates \
           cmake \
           coreutils \
           curl \
           g++-4.8 \
           gcc-4.8 \
           gcc-4.8-base \
           gfortran-4.8 \
           git \
           git-annex \
           libbz2-dev \
           libfreetype6-dev \
           libgfortran-4.8-dev \
           libglib2.0-0 \
           libglu1-mesa-dev \
           libgomp1 \
           libjpeg62-dev \
           libopenblas-dev \
           libsqlite3-dev \
           libssl-dev \
           libtool \
           libtool-bin \
           libx11-dev \
           libxaw7-dev \
           libxi-dev \
           libxml2-utils \
           libxmu-dev \
           libxmu-headers \
           libxmu6 \
           libxt-dev \
           libxt6 \
           make \
           perl \
           sudo \
           tar \
           tcsh \
           unzip \
           uuid-dev \
           vim-common \
           wget \
    && rm -rf /var/lib/apt/lists/* \
    # git config
    && git config --global user.email "CI@example.com" \
    && git config --global user.name "CI" \
    # Following along with:
    #  - https://travis-ci.com/github/freesurfer/freesurfer/builds/219074161
    # Compile with gcc 4.8
    # --------------------
    && update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-4.8 100 \
    && update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-4.8 100 \
    && update-alternatives --install /usr/bin/gfortran gfortran /usr/bin/gfortran-4.8 100 \
    # FreeSurfer needs python  v3.6.8
    # From: https://github.com/pwighton/fs-docker/blob/09cc6b0b6c0538cbb182b04435daf85c123a63d5/build/Dockerfile#L66
    # Alternative is https://github.com/ReproNim/neurodocker/blob/master/neurodocker/templates/afni.yaml
    # -------------------------------------------------------------------------
    && curl -sSL --retry 5 https://www.python.org/ftp/python/3.6.8/Python-3.6.8.tgz | tar -xz -C /tmp \
    && cd /tmp/Python-3.6.8 \
    && ./configure \
    && make \
    && make install \
    && cd / \
    && rm -rf /tmp/Python-3.6.8 \
    && pip3 install -q --no-cache-dir -U pip \
    && pip3 install -q --no-cache-dir wheel \
    && sync \
    # FreeSurfer needs CMake 3.9 or higher
    # From: https://github.com/Rikorose/gcc-cmake/blob/master/gcc-4/Dockerfile
    # ------------------------------------------------------------------------------
    && wget https://github.com/Kitware/CMake/releases/download/v3.19.0/cmake-3.19.0-Linux-x86_64.sh -q -O /tmp/cmake-install.sh \
    && chmod u+x /tmp/cmake-install.sh \
    && mkdir -p /usr/share/cmake-3.19.0 \
    && /tmp/cmake-install.sh --skip-license --prefix=/usr/share/cmake-3.19.0 \
    && CMAKE_BINPATH=`which cmake` \
    && rm -rf $CMAKE_BINPATH \
    && ln -s /usr/share/cmake-3.19.0/bin/cmake $CMAKE_BINPATH \
    && rm /tmp/cmake-install.sh \
    # Compile FreeSurfer
    # https://github.com/pwighton/fs-docker
    # ----------------------------------------------------------------
    && mkdir -p /opt/freesurfer-pkg \
    && mkdir -p /opt/freesurfer-20210513-fs-infant-dev-merge \
    && wget -q -c http://surfer.nmr.mgh.harvard.edu/pub/data/fspackages/prebuilt/centos7-packages.tar.gz -O - | tar -xz -C /opt/freesurfer-pkg \
    && mv /opt/freesurfer-pkg/packages/* /opt/freesurfer-pkg \
    && rm -rf /opt/freesurfer-pkg/packages \
    && echo "Cloning..." \
    && echo "   remote:      "https://github.com/pwighton/freesurfer.git \
    && echo "   branch:      "20210513-fs-infant-dev-merge \
    && echo "   destination: "/tmp/freesurfer/freesurfer-20210513-fs-infant-dev-merge \
    && git clone --single-branch --branch 20210513-fs-infant-dev-merge https://github.com/pwighton/freesurfer.git /tmp/freesurfer/freesurfer-20210513-fs-infant-dev-merge \
    # Compile
    # -------------------------------------------------
    && cd /opt/freesurfer-20210513-fs-infant-dev-merge \
    && cmake -DCMAKE_INSTALL_PREFIX=/opt/freesurfer-20210513-fs-infant-dev-merge -DBUILD_GUIS=OFF -DMINIMAL=ON -DINFANT_MODULE=OFF -DFS_PACKAGES_DIR=/opt/freesurfer-pkg -DGFORTRAN_LIBRARIES=/usr/lib/gcc/x86_64-linux-gnu/5/libgfortran.so -DINSTALL_PYTHON_DEPENDENCIES=OFF -DDISTRIBUTE_FSPYTHON=OFF -DMARTINOS_BUILD=OFF -DGEMS_BUILD_EXECUTABLES=OFF -DCMAKE_CXX_COMPILER=/usr/bin/g++ -DCMAKE_CXX_COMPILER_AR=/usr/bin/ar -DCMAKE_CXX_COMPILER_RANLIB=/usr/bin/ranlib -DCMAKE_CXX_FLAGS="-msse2 -mfpmath=sse -fPIC -fpermissive" -DCMAKE_C_COMPILER=/usr/bin/cc -DCMAKE_C_COMPILER_AR=/usr/bin/ar -DCMAKE_C_COMPILER_RANLIB=/usr/bin/ranlib -DCMAKE_C_FLAGS="-msse2 -mfpmath=sse -fPIC -fpermissive" /tmp/freesurfer/freesurfer-20210513-fs-infant-dev-merge \
    && make -j4 \
    # Install python reqs
    # -------------------------------------------------
    #   For infant:
    #     - https://github.com/pwighton/fs-docker/blob/f691232312e97f2ea87b8ae45bfd5c365e2bc91c/baby/entrypoint.freesurfer-run.bash#L9
    && if [ "OFF" = ON ] || [ "OFF" = on ]; then \
         pip3 install -r /tmp/freesurfer/freesurfer-20210513-fs-infant-dev-merge/infant/docker/requirements.txt; \
         ln -s /opt/freesurfer-20210513-fs-infant-dev-merge/bin/infant-container-entrypoint.bash /bin/infant-container-entrypoint.bash; \
       else \
         pip3 install -r /tmp/freesurfer/freesurfer-20210513-fs-infant-dev-merge/python/requirements.txt; \
         pip3 install -r /tmp/freesurfer/freesurfer-20210513-fs-infant-dev-merge/python/requirements-extra.txt; \
    fi \
    # Files needed to be downloaded from the annex before we can run `make install`
    # todo: tag files in annex so we can run `git annex get --metadata fstags=makeinstall` (faster)
    # -------------------------------------------------
    && cd /tmp/freesurfer/freesurfer-20210513-fs-infant-dev-merge \
    && git remote add datasrc https://surfer.nmr.mgh.harvard.edu/pub/dist/freesurfer/repo/annex.git \
    && git fetch datasrc \
    # PW 2021/03/04: Werid.. this returns an error code, but things still work?
    #                So hardwire the exit code to zero so `docker build` doesn't error out
    #                This is because surfer.nmr now runs git-annex 8 todo: upgrade
    && git annex enableremote datasrc || true \
    && git annex get -q . \
    && git annex unlock \
    # Install
    # -------------------------------------------------
    && cd /opt/freesurfer-20210513-fs-infant-dev-merge \
    && make install \
    # If template.license_base64 populated, decode from base64 and write to template.license_path
    # https://github.com/pwighton/fs-docker/blob/master/run/entrypoint.freesurfer-run.bash
    # -------------------------------------------------
    && if [ -n "cHdpZ2h0b25AbWdoLmhhcnZhcmQuZWR1CjU1NDc4CiAqQ0Y4V25Gc2V3M3MuCiBGU2VJb1Q4Sklha1prCg==" ]; then \
         echo cHdpZ2h0b25AbWdoLmhhcnZhcmQuZWR1CjU1NDc4CiAqQ0Y4V25Gc2V3M3MuCiBGU2VJb1Q4Sklha1prCg== | base64 -d > /opt/freesurfer-20210513-fs-infant-dev-merge/license.txt; \
    fi \
    ## *** Dev options; this should become it's own variable
    ## Note jupyter relies on `libsqlite3` being present before python is compiled
    && pip3 install jupyter \
    ## *** End dev options
    # Setup mount points
    # -------------------------------------------------
    && mkdir -p /ext/fs-subjects \
    && mkdir -p /opt/fs-infant-model \
    # Todo:
    #   - delete the /tmp dir, but first ensure that it's not needed
RUN apt-get update -qq && apt-get install -y -q curl
RUN curl -sL https://deb.nodesource.com/setup_14.x | bash -
RUN apt-get install -y -q nodejs
RUN npm install -g bids-validator@0.19.8
RUN mkdir root/matlab && touch root/matlab/startup.m
RUN mkdir /scratch
RUN mkdir /local-scratch
COPY ["./run.py", \
      "/run.py"]
RUN chmod +x /run.py
COPY ["./version", \
      "/version"]
ENTRYPOINT ["/neurodocker/startup.sh /run.py"]

# Save specification to JSON.
RUN printf '{ \
  "pkg_manager": "apt", \
  "existing_users": [ \
    "root" \
  ], \
  "instructions": [ \
    { \
      "name": "from_", \
      "kwds": { \
        "base_image": "ubuntu:xenial" \
      } \
    }, \
    { \
      "name": "env", \
      "kwds": { \
        "FS_LICENSE": "/opt/freesurfer-20210513-fs-infant-dev-merge/license.txt", \
        "SUBJECTS_DIR": "/ext/fs-subjects", \
        "FS_INFANT_MODEL": "/opt/fs-infant-model", \
        "OS": "Linux", \
        "PATH": "/opt/niftyreg-master/bin:/opt/freesurfer-pkg/mni/current/bin:/opt/freesurfer-20210513-fs-infant-dev-merge/bin:/opt/freesurfer-20210513-fs-infant-dev-merge/fsfast/bin:/opt/freesurfer-20210513-fs-infant-dev-merge/tktools:/opt/freesurfer-20210513-fs-infant-dev-merge/mni/bin:$PATH", \
        "FREESURFER_HOME": "/opt/freesurfer-20210513-fs-infant-dev-merge", \
        "FREESURFER": "/opt/freesurfer-20210513-fs-infant-dev-merge", \
        "PERL5LIB": "/opt/freesurfer-20210513-fs-infant-dev-merge/mni/share/perl5", \
        "LOCAL_DIR": "/opt/freesurfer-20210513-fs-infant-dev-merge/local", \
        "FSFAST_HOME": "/opt/freesurfer-20210513-fs-infant-dev-merge/fsfast", \
        "FMRI_ANALYSIS_DIR": "/opt/freesurfer-20210513-fs-infant-dev-merge/fsfast", \
        "FSF_OUTPUT_FORMAT": "nii.gz", \
        "FUNCTIONALS_DIR": "/opt/freesurfer-20210513-fs-infant-dev-merge/sessions", \
        "PYTHONPATH": "/opt/freesurfer-20210513-fs-infant-dev-merge/python/packages", \
        "FS_OVERRIDE": "0", \
        "FIX_VERTEX_AREA": "", \
        "FS_DISABLE_LANG": "1", \
        "FS_TIME_ALLOW": "0", \
        "MINC_BIN_DIR": "/opt/freesurfer-20210513-fs-infant-dev-merge/mni/bin", \
        "MINC_LIB_DIR": "/opt/freesurfer-20210513-fs-infant-dev-merge/mni/lib", \
        "MNI_DIR": "/opt/freesurfer-20210513-fs-infant-dev-merge/mni", \
        "MNI_DATAPATH": "/opt/freesurfer-20210513-fs-infant-dev-merge/mni/data", \
        "MNI_PERL5LIB": "/opt/freesurfer-20210513-fs-infant-dev-merge/mni/share/perl5", \
        "CNYBCH_TEMPLATE_SUBJECTS_DIR": "/opt/fs-infant-model/CNYBCH", \
        "CNYBCH_SUBJECTS": "Template1 Template2 Template3 Template4 Template5 Template6 Template7 Template8 Template9 Template10 Template11 Template12 Template13 Template14 Template15 Template16 Template17 Template18 Template19 Template20 Template21 Template22 Template23 Template24 Template25 Template26", \
        "CNYBCH_AGES": "9 7 6 5 18 12 0 0 3 8 10 10 18 4 2 14 3 16 0 12 0 15 5 17 16 0", \
        "CNYBCH_GMWM_SUBJECTS": "Template5 Template6 Template8 Template10 Template13 Template18 Template20 Template22", \
        "CNYBCH_GMWM_AGES": "18 12 0 8 18 16 12 15", \
        "CNYBCH_NEONATES": "Template7 Template8 Template19 Template21 Template26", \
        "CNYBCH_NEONATEAGES": "3 4 1 2 4", \
        "CNYBCH_AROUNDONE": "Template11 Template12 Template6 Template20 Template16", \
        "CNYBCH_AROUNDONEAGES": "10 10 12 12 14" \
      } \
    }, \
    { \
      "name": "run", \
      "kwds": { \
        "command": "apt-get update -qq\\napt-get install -y -q --no-install-recommends \\\\\\n    bc \\\\\\n    binutils \\\\\\n    bzip2 \\\\\\n    ca-certificates \\\\\\n    cmake \\\\\\n    coreutils \\\\\\n    curl \\\\\\n    g++-4.8 \\\\\\n    gcc-4.8 \\\\\\n    gcc-4.8-base \\\\\\n    gfortran-4.8 \\\\\\n    git \\\\\\n    git-annex \\\\\\n    libbz2-dev \\\\\\n    libfreetype6-dev \\\\\\n    libgfortran-4.8-dev \\\\\\n    libglib2.0-0 \\\\\\n    libglu1-mesa-dev \\\\\\n    libgomp1 \\\\\\n    libjpeg62-dev \\\\\\n    libopenblas-dev \\\\\\n    libsqlite3 \\\\\\n    libssl-dev \\\\\\n    libtool \\\\\\n    libtool-bin \\\\\\n    libx11-dev \\\\\\n    libxaw7-dev \\\\\\n    libxi-dev \\\\\\n    libxml2-utils \\\\\\n    libxmu-dev \\\\\\n    libxmu-headers \\\\\\n    libxmu6 \\\\\\n    libxt-dev \\\\\\n    libxt6 \\\\\\n    make \\\\\\n    perl \\\\\\n    sudo \\\\\\n    tar \\\\\\n    tcsh \\\\\\n    unzip \\\\\\n    uuid-dev \\\\\\n    vim-common \\\\\\n    wget\\nrm -rf /var/lib/apt/lists/*\\n# git config\\ngit config --global user.email \\"CI@example.com\\"\\ngit config --global user.name \\"CI\\"\\n# Following along with:\\n#  - https://travis-ci.com/github/freesurfer/freesurfer/builds/219074161\\n# Compile with gcc 4.8\\n# --------------------\\nupdate-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-4.8 100\\nupdate-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-4.8 100\\nupdate-alternatives --install /usr/bin/gfortran gfortran /usr/bin/gfortran-4.8 100\\n# FreeSurfer needs python  v3.6.8\\n# From: https://github.com/pwighton/fs-docker/blob/09cc6b0b6c0538cbb182b04435daf85c123a63d5/build/Dockerfile#L66\\n# Alternative is https://github.com/ReproNim/neurodocker/blob/master/neurodocker/templates/afni.yaml\\n# -------------------------------------------------------------------------\\ncurl -sSL --retry 5 https://www.python.org/ftp/python/3.6.8/Python-3.6.8.tgz | tar -xz -C /tmp\\ncd /tmp/Python-3.6.8\\n./configure\\nmake\\nmake install \\ncd /\\nrm -rf /tmp/Python-3.6.8\\npip3 install -q --no-cache-dir -U pip\\npip3 install -q --no-cache-dir wheel\\nsync\\n# FreeSurfer needs CMake 3.9 or higher\\n# From: https://github.com/Rikorose/gcc-cmake/blob/master/gcc-4/Dockerfile\\n# ------------------------------------------------------------------------------\\nwget https://github.com/Kitware/CMake/releases/download/v3.19.0/cmake-3.19.0-Linux-x86_64.sh -q -O /tmp/cmake-install.sh\\nchmod u+x /tmp/cmake-install.sh\\nmkdir -p /usr/share/cmake-3.19.0\\n/tmp/cmake-install.sh --skip-license --prefix=/usr/share/cmake-3.19.0\\nCMAKE_BINPATH=`which cmake`\\nrm -rf $CMAKE_BINPATH\\nln -s /usr/share/cmake-3.19.0/bin/cmake $CMAKE_BINPATH\\nrm /tmp/cmake-install.sh\\n# Compile FreeSurfer\\n# https://github.com/pwighton/fs-docker\\n# ----------------------------------------------------------------\\nmkdir -p /opt/freesurfer-pkg\\nmkdir -p /opt/freesurfer-20210513-fs-infant-dev-merge\\nwget -q -c http://surfer.nmr.mgh.harvard.edu/pub/data/fspackages/prebuilt/centos7-packages.tar.gz -O - | tar -xz -C /opt/freesurfer-pkg \\nmv /opt/freesurfer-pkg/packages/* /opt/freesurfer-pkg\\nrm -rf /opt/freesurfer-pkg/packages\\necho \\"Cloning...\\"\\necho \\"   remote:      \\"https://github.com/pwighton/freesurfer.git\\necho \\"   branch:      \\"20210513-fs-infant-dev-merge\\necho \\"   destination: \\"/tmp/freesurfer/freesurfer-20210513-fs-infant-dev-merge\\ngit clone --single-branch --branch 20210513-fs-infant-dev-merge https://github.com/pwighton/freesurfer.git /tmp/freesurfer/freesurfer-20210513-fs-infant-dev-merge\\n# Compile\\n# -------------------------------------------------\\ncd /opt/freesurfer-20210513-fs-infant-dev-merge\\ncmake -DCMAKE_INSTALL_PREFIX=/opt/freesurfer-20210513-fs-infant-dev-merge -DBUILD_GUIS=OFF -DMINIMAL=ON -DINFANT_MODULE=OFF -DFS_PACKAGES_DIR=/opt/freesurfer-pkg -DGFORTRAN_LIBRARIES=/usr/lib/gcc/x86_64-linux-gnu/5/libgfortran.so -DINSTALL_PYTHON_DEPENDENCIES=OFF -DDISTRIBUTE_FSPYTHON=OFF -DMARTINOS_BUILD=OFF -DGEMS_BUILD_EXECUTABLES=OFF -DCMAKE_CXX_COMPILER=/usr/bin/g++ -DCMAKE_CXX_COMPILER_AR=/usr/bin/ar -DCMAKE_CXX_COMPILER_RANLIB=/usr/bin/ranlib -DCMAKE_CXX_FLAGS=\\"-msse2 -mfpmath=sse -fPIC -fpermissive\\" -DCMAKE_C_COMPILER=/usr/bin/cc -DCMAKE_C_COMPILER_AR=/usr/bin/ar -DCMAKE_C_COMPILER_RANLIB=/usr/bin/ranlib -DCMAKE_C_FLAGS=\\"-msse2 -mfpmath=sse -fPIC -fpermissive\\" /tmp/freesurfer/freesurfer-20210513-fs-infant-dev-merge\\nmake -j4\\n# Install python reqs\\n# -------------------------------------------------\\n#   For infant:\\n#     - https://github.com/pwighton/fs-docker/blob/f691232312e97f2ea87b8ae45bfd5c365e2bc91c/baby/entrypoint.freesurfer-run.bash#L9\\nif [ \\"OFF\\" = ON ] || [ \\"OFF\\" = on ]; then \\\\\\n  pip3 install -r /tmp/freesurfer/freesurfer-20210513-fs-infant-dev-merge/infant/docker/requirements.txt; \\\\\\n  ln -s /opt/freesurfer-20210513-fs-infant-dev-merge/bin/infant-container-entrypoint.bash /bin/infant-container-entrypoint.bash; \\\\\\nelse \\\\\\n  pip3 install -r /tmp/freesurfer/freesurfer-20210513-fs-infant-dev-merge/python/requirements.txt; \\\\\\n  pip3 install -r /tmp/freesurfer/freesurfer-20210513-fs-infant-dev-merge/python/requirements-extra.txt; \\\\\\nfi\\n# Files needed to be downloaded from the annex before we can run `make install`\\n# todo: tag files in annex so we can run `git annex get --metadata fstags=makeinstall` \(faster\)\\n# -------------------------------------------------\\ncd /tmp/freesurfer/freesurfer-20210513-fs-infant-dev-merge\\ngit remote add datasrc https://surfer.nmr.mgh.harvard.edu/pub/dist/freesurfer/repo/annex.git\\ngit fetch datasrc\\n# PW 2021/03/04: Werid.. this returns an error code, but things still work?\\n#                So hardwire the exit code to zero so `docker build` doesn't error out\\n#                This is because surfer.nmr now runs git-annex 8 todo: upgrade\\ngit annex enableremote datasrc || true\\ngit annex get -q .\\ngit annex unlock\\n# Install\\n# -------------------------------------------------    \\ncd /opt/freesurfer-20210513-fs-infant-dev-merge\\nmake install\\n# If template.license_base64 populated, decode from base64 and write to template.license_path\\n# https://github.com/pwighton/fs-docker/blob/master/run/entrypoint.freesurfer-run.bash\\n# -------------------------------------------------\\nif [ -n \\"cHdpZ2h0b25AbWdoLmhhcnZhcmQuZWR1CjU1NDc4CiAqQ0Y4V25Gc2V3M3MuCiBGU2VJb1Q4Sklha1prCg==\\" ]; then \\\\\\n  echo cHdpZ2h0b25AbWdoLmhhcnZhcmQuZWR1CjU1NDc4CiAqQ0Y4V25Gc2V3M3MuCiBGU2VJb1Q4Sklha1prCg== | base64 -d > /opt/freesurfer-20210513-fs-infant-dev-merge/license.txt; \\\\\\nfi\\n## *** Dev options; this should become it's own variable\\n## Note jupyter relies on `libsqlite3` being present before python is compiled\\npip3 install jupyter\\n## *** End dev options\\n# Setup mount points\\n# -------------------------------------------------\\nmkdir -p /ext/fs-subjects\\nmkdir -p /opt/fs-infant-model\\n# Todo:\\n#   - delete the /tmp dir, but first ensure that it's not needed" \
      } \
    }, \
    { \
      "name": "run", \
      "kwds": { \
        "command": "apt-get update -qq && apt-get install -y -q curl" \
      } \
    }, \
    { \
      "name": "run", \
      "kwds": { \
        "command": "curl -sL https://deb.nodesource.com/setup_14.x | bash -" \
      } \
    }, \
    { \
      "name": "run", \
      "kwds": { \
        "command": "apt-get install -y -q nodejs" \
      } \
    }, \
    { \
      "name": "run", \
      "kwds": { \
        "command": "npm install -g bids-validator@0.19.8" \
      } \
    }, \
    { \
      "name": "run", \
      "kwds": { \
        "command": "mkdir root/matlab && touch root/matlab/startup.m" \
      } \
    }, \
    { \
      "name": "run", \
      "kwds": { \
        "command": "mkdir /scratch" \
      } \
    }, \
    { \
      "name": "run", \
      "kwds": { \
        "command": "mkdir /local-scratch" \
      } \
    }, \
    { \
      "name": "copy", \
      "kwds": { \
        "source": [ \
          "./run.py", \
          "/run.py" \
        ], \
        "destination": "/run.py" \
      } \
    }, \
    { \
      "name": "run", \
      "kwds": { \
        "command": "chmod +x /run.py" \
      } \
    }, \
    { \
      "name": "copy", \
      "kwds": { \
        "source": [ \
          "./version", \
          "/version" \
        ], \
        "destination": "/version" \
      } \
    }, \
    { \
      "name": "entrypoint", \
      "kwds": { \
        "args": [ \
          "/neurodocker/startup.sh /run.py" \
        ] \
      } \
    } \
  ] \
}' > /.reproenv.json
# End saving to specification to JSON.
